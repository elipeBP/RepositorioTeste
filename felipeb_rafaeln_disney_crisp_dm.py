# -*- coding: utf-8 -*-
"""Felipeb_RafaelN_disney_crisp-dm.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kRXmgd9WHaLXzuc9Wi91H62TB5w7qlxd

# 🔄 Estágios do CRISP-DM com base na imagem



O conjunto de dados utilizado neste projeto reúne informações sobre os filmes lançados pela Disney entre os anos de 1937 e 2016. Ele traz uma amostra representativa da produção cinematográfica da empresa ao longo de quase 80 anos, incluindo títulos clássicos e contemporâneos, Esse conjunto de dados permite uma análise histórica e financeira da atuação da Disney no cinema, possibilitando identificar padrões, tendências de gênero, classificações mais frequentes e desempenho econômico dos filmes ao longo do tempo.

## 1. Entendimento do Negócio 💼

O objetivo deste projeto é analisar dados de filmes da Disney para responder perguntas simples e objetivas.  
A partir disso, será possível extrair insights úteis como:

- Qual o filme mais recente?
- Qual teve maior bilheteria?
- Qual o gênero mais comum?
- Quantos filmes foram lançados depois dos anos 2000?



A base de dados utilizada foi disponibilizada no formato `.csv` e será carregada via Pandas.

## 2. Entendimento dos Dados 🔍

Nesta etapa, analisamos o conteúdo inicial do dataset para entender sua estrutura, tipos de dados e qualidade das informações. Também buscamos identificar dados ausentes, inconsistentes ou colunas que precisam de ajustes para facilitar a análise posterior.

No caso deste projeto, estamos lidando com informações sobre filmes da Disney, como título, data de lançamento, bilheteria e classificação indicativa. Essa compreensão inicial é fundamental para definir quais colunas serão usadas nas análises e o que precisará ser tratado antes da modelagem.

### 🧾 Dicionário de Dados Traduzido

Para facilitar a compreensão do dataset dos filmes da Disney, segue abaixo a explicação dos principais termos e categorias:

#### 📁 Colunas principais:
- **movie_title**: Título original do filme (em inglês)
- **release_date**: Data de lançamento
- **genre**: Gênero do filme (ex: Animation, Comedy, Action)
- **mpaa_rating**: Classificação indicativa segundo a MPAA (G, PG, PG-13, etc)
- **total_gross**: Bilheteria arrecadada no lançamento (valor nominal)
- **inflation_adjusted_gross**: Bilheteria ajustada pela inflação

#### 🎬 Gêneros traduzidos:
- **Animation** → Animação  
- **Comedy** → Comédia  
- **Action** → Ação  
- **Adventure** → Aventura  
- **Drama** → Drama  
- **Fantasy** → Fantasia  
- **Documentary** → Documentário  
- **Musical** → Musical  

#### 📋 Classificações indicativas (MPAA Rating):
- **G** → Livre para todos os públicos (General Audiences)  
- **PG** → Acompanhamento dos pais sugerido (Parental Guidance Suggested)  
- **PG-13** → Algumas cenas impróprias para menores de 13 anos  
- **R** → Menores de 17 anos somente acompanhados dos pais  
- **NC-17** → Apenas maiores de 17 anos  
- **Not Rated / NR** → Sem classificação oficial

Esse entendimento é essencial para analisar corretamente os dados, interpretar gráficos e tirar conclusões coerentes nas próximas etapas do projeto.
"""

import pandas as pd
import matplotlib.pyplot as plt
# ler o dataset
df = pd.read_excel("/content/projetoIntegrado.xlsx")

# Visualizar uma amostra
df.head()

"""## 3. Preparação dos Dados 🧹

Aqui transformamos a coluna `release_date` para o formato de data e identificamos dados faltantes.  
Essa etapa é importante para evitar erros nas análises futuras.

"""

# Converter a coluna de data
df["release_date"] = pd.to_datetime(df["release_date"], errors="coerce")

# Renomear colunas para português
df.rename(columns={
    "movie_title": "titulo",
    "release_date": "data_lancamento",
    "genre": "genero",
    "mpaa_rating": "classificacao",
    "total_gross": "bilheteria_nominal",
    "inflation_adjusted_gross": "bilheteria_ajustada"
}, inplace=True)

# Criar uma  coluna com a década do lançamento
df["decada"] = (df["data_lancamento"].dt.year // 10) * 10

"""## 4. Análise / Modelagem 📊

Utilizamos funções simples do Python e da biblioteca Pandas para responder perguntas relevantes sobre os dados dos filmes da Disney.

Essas perguntas envolvem, por exemplo:

Qual foi o filme com maior bilheteria?

Qual o gênero mais comum?

Quantos filmes foram lançados depois do ano 2000?

Com isso, conseguimos transformar os dados em informações úteis, que podem ajudar a entender o desempenho dos filmes da Disney ao longo do tempo.

Exemplo didático do cotidiano:
Imagine que você tem um caderno onde anotou o nome dos filmes que assistiu, o ano de lançamento, se você gostou ou não, e o valor do ingresso.
Com esses dados, você pode responder perguntas como:

Qual o gênero que você mais assiste?

Em que ano você viu mais filmes?

Qual ingresso foi mais caro?

"""

# Dicionário de traduções dos títulos mais relevantes
traducao_titulos = {
    "Zootopia": "Zootopia: Essa Cidade é o Bicho",
    "Snow White and the Seven Dwarfs": "Branca de Neve e os Sete Anões",
    "The Lion King": "O Rei Leão",
    "101 Dalmatians": "101 Dálmatas",
    "Frozen": "Frozen: Uma Aventura Congelante",
    "Big Hero 6": "Operação Big Hero",
    "Beauty and the Beast": "A Bela e a Fera",
    "Finding Dory": "Procurando Dory",
    "Wreck-It Ralph": "Detona Ralph"
}



def responder_pergunta(pergunta):
    if pergunta == "1. Filme mais recente lançado":
        titulo = df.loc[df["data_lancamento"].idxmax()]["titulo"]
        resultado = traducao_titulos.get(titulo, titulo)
        print(f"\n🎬 FILME MAIS RECENTE LANÇADO: {resultado.upper()}")
    else:
        if pergunta == "2. Primeiro filme lançado":
            titulo = df.loc[df["data_lancamento"].idxmin()]["titulo"]
            resultado = traducao_titulos.get(titulo, titulo)
            print(f"\n🎞️ PRIMEIRO FILME LANÇADO: {resultado.upper()}")
        else:
            if pergunta == "3. Gênero mais comum":
                resultado = df["genero"].mode()[0]
                print(f"\n📚 GÊNERO MAIS COMUM: {resultado.upper()}")
            else:
                if pergunta == "4. Classificação indicativa mais frequente":
                    resultado = df["classificacao"].mode()[0]
                    print(f"\n📋 CLASSIFICAÇÃO MAIS COMUM: {resultado.upper()}")
                    print(f"\n💰 MAIOR BILHETERIA NOMINAL: {resultado.upper()}")
                    print("ℹ️ PG (Parental Guidance): Recomendado que os pais acompanhem. Pode ter temas leves ou sensíveis.")
                else:
                    if pergunta == "5. Filme com maior bilheteria nominal":
                        titulo = df.loc[df["bilheteria_nominal"].idxmax()]["titulo"]
                        resultado = traducao_titulos.get(titulo, titulo)
                        print(f"\n💰 MAIOR BILHETERIA NOMINAL: {resultado.upper()}")
                    else:
                        if pergunta == "6. Filme com maior bilheteria ajustada pela inflação":
                            titulo = df.loc[df["bilheteria_ajustada"].idxmax()]["titulo"]
                            resultado = traducao_titulos.get(titulo, titulo)
                            print(f"\n💵 MAIOR BILHETERIA AJUSTADA: {resultado.upper()}")
                        else:
                            if pergunta == "7. Filmes lançados após 2000":
                                resultado = df[df["data_lancamento"].dt.year > 2000].shape[0]
                                print(f"\n📅 {resultado} FILMES LANÇADOS APÓS O ANO 2000")
                            else:
                                if pergunta == "8. Filmes lançados antes de 2000":
                                    resultado = df[df["data_lancamento"].dt.year < 2000].shape[0]
                                    print(f"\n📼 {resultado} FILMES LANÇADOS ANTES DO ANO 2000")
                                else:
                                    if pergunta == "9. Total de filmes no dataset":
                                        resultado = df.shape[0]
                                        print(f"\n🎥 TOTAL DE FILMES NO CONJUNTO DE DADOS: {resultado}")
                                    else:
                                        if pergunta == "10. Média de arrecadação nominal":
                                            resultado = round(df["bilheteria_nominal"].mean(), 2)
                                            print(f"\n📊 MÉDIA DE ARRECADAÇÃO NOMINAL: US$: {resultado:,.3f}")
                                        else:
                                            print("\n❌ PERGUNTA INVÁLIDA.")

"""## 5. Validação ✅

Todos os blocos de código foram testados no Google Colab e executaram corretamente, sem apresentar erros.  
As respostas foram conferidas manualmente com os dados do DataFrame, e os resultados correspondem à realidade esperada:

- O filme com maior bilheteria
- Filme mais recente lançado(1937-2016)
- O número total de filmes corresponde ao total de linhas do dataset.

Além disso, o menu de perguntas foi testado com todos os números de 1 a 10, retornando a resposta correta para cada opção.

Como se trata de uma análise descritiva simples, **não há modelos preditivos a validar**, apenas verificação da lógica e da integridade dos dados.



"""

df.loc[df["bilheteria_nominal"].idxmax()]["titulo"]

df["data_lancamento"].max()
df["titulo"].loc[df["data_lancamento"].idxmax()]

validacao = df.shape[0]
print(f"O dataset contém {validacao}")

"""##6. Implantação / Apresentação 🧾

Todas as etapas foram aplicadas: desde a limpeza e tradução dos dados até a apresentação visual dos resultados.

"""

def menu_perguntas():
    # Dicionário com perguntas
    perguntas_dict = {
        "1": "1. Filme mais recente lançado",
        "2": "2. Primeiro filme lançado",
        "3": "3. Gênero mais comum",
        "4": "4. Classificação indicativa mais frequente",
        "5": "5. Filme com maior bilheteria nominal",
        "6": "6. Filme com maior bilheteria ajustada pela inflação",
        "7": "7. Filmes lançados após 2000",
        "8": "8. Filmes lançados antes de 2000",
        "9": "9. Total de filmes no dataset",
        "10": "10. Média de arrecadação nominal"
    }

    while True:
        # Mostrar menu
        print("\n📌 Escolha uma das perguntas abaixo (ou digite 'sair' para encerrar):\n")
        for key, val in perguntas_dict.items():
            print(f"{key} - {val[3:]}")

        # Entrada
        opcao = input("\nDigite o número da pergunta ou 'sair': ").strip()

        if opcao.lower() == 'sair':
            print("\n✅ Programa encerrado.")
            break

        # Responde
        pergunta_escolhida = perguntas_dict.get(opcao)
        if pergunta_escolhida:
            responder_pergunta(pergunta_escolhida)
        else:
            print("❌ Número inválido. Tente novamente.")

menu_perguntas()


# Calcular média de bilheteria por classificação
df.groupby("classificacao")["bilheteria_nominal"].mean().sort_values(ascending=False).plot(
    kind="bar",
    title="Média de Bilheteria por Classificação Indicativa",
    xlabel="Classificação",
    ylabel="Bilheteria Média",
    color="lightblue",
    edgecolor="black"
)



# Criar uma  coluna com a década do lançamento
#df["decada"] = (df["data_lancamento"].dt.year // 10) * 10

# Contar quantos filmes tem por década
filmes_por_decada = df["decada"].value_counts().sort_index()

#  gráfico
plt.figure(figsize=(20, 6))
filmes_por_decada.plot(kind="bar", color="red", edgecolor="black")

plt.title("🎬 Quantidade de Filmes por Década", fontsize=14)
plt.xlabel("Década", fontsize=12)
plt.ylabel("Quantidade de Filmes", fontsize=12)
plt.xticks(rotation=45)
plt.grid(axis='y', linestyle='--', alpha=0.7)
plt.tight_layout()
plt.show()